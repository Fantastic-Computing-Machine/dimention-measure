"""
Django settings for Dimention_Measure project.
Generated by 'django-admin startproject' using Django 4.0.2.
For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from dotenv import load_dotenv
import os
import pymysql
from pathlib import Path

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

dotenv_path = BASE_DIR / ".env"
load_dotenv(dotenv_path=dotenv_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "0.tcp.in.ngrok.io",
    "127.0.0.1",
    "0.tcp.ngrok.io",
    "localhost",
    "0.0.0.0",
    "13.234.231.51",
    "3.6.80.190",
    os.getenv("HOST_IP"),
    "*"
]

CSRF_TRUSTED_ORIGINS = [
    "https://adiagarwalrock-literate-computing-54wvrp9r7v634xpj-8000.preview.app.github.dev"
]

#

# CACHES = {
#     "default": {
#         "BACKEND": "django.core.cache.backends.db.DatabaseCache",
#         "LOCATION": "db_cache_table",
#     },
# }
# print("Cache Enabled...")
# print(f"\tCache Backend: {CACHES['default']['BACKEND'].split('.')[-1]}")


STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStoage'

WSGI_APPLICATION = 'Dimention_Measure.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'NAME': 'insight_db',
#         'USER': 'postgres',
#         'PASSWORD': 'aditya',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }

# from django.db import connection
# # x =

# print(connection.close())


print(f"Database Connected...")
print('\n\t'.join("{}: {}".format(k, v) for k, v in DATABASES['default'].items()))
